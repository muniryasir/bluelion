"""
Django settings for bluelionapp project.

Generated by 'django-admin startproject' using Django 2.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_DIR = os.path.dirname(os.path.abspath(__file__))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'p+%!#5!p&a$gthq=8vg9&8e-8_$_z3pdl5s^9vffj#qj!wqi-1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'testmap',
    'chatou',
    'chatou_auto',
    'commune_de_paris',
    'ckeditor',
    'ckeditor_uploader',
    # 'pwa',
]

MIDDLEWARE = [
    'bluelionapp.virtualHostMiddleware.VirtualHostMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'bluelionapp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.jinja2.Jinja2',
        'DIRS': ['%s/jinjatemplates/'% (PROJECT_DIR),],
        'APP_DIRS': True,
        'OPTIONS': {
            # 'environment': 'bluelionapp.jinja2.environment',
        },
    },
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['%s/testmap/jinja_templates/testmap/'% (BASE_DIR),
        '%s/chatou/jinja_templates/chatou/'% (BASE_DIR),
        '%s/chatou_auto/jinja_templates/chatou_auto/'% (BASE_DIR),
        '%s/commune_de_paris/jinja_templates/commune_de_paris/'% (BASE_DIR),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bluelionapp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'blueliondb',
        'USER': 'lionhart',
        'PASSWORD': 'excalibur',
        'HOST': 'localhost',
        'PORT': '',
    },
    'Chatoudb': { # chatou database
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'chatoudb',
        'USER': 'lionhart',
        'PASSWORD': 'excalibur',
        'HOST': 'localhost',
        'PORT': '',
    },
    'CommunedeParisdb': { # commune_de_paris database
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'communedeparisdb',
        'USER': 'lionhart',
        'PASSWORD': 'excalibur',
        'HOST': 'localhost',
        'PORT': '',
    }
}
DATABASE_ROUTERS = ['bluelionapp.bluelionRouter.BluelionRouter']
# DATABASE_ROUTERS = ['commune_de_paris.CommunedeParisRouter.CommunedeParisRouter']
# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, '/root/')
STATICFILES_DIRS = [
        os.path.join(BASE_DIR, 'static'),
]
# PWA_SERVICE_WORKER_PATH = os.path.join(BASE_DIR, 'static/chatou_auto/static/js/pwa/', 'serviceworker.js')
# STATIC_URL_TESTMAP = '/testmap/static/'
# STATIC_TESTMAP = os.path.join(BASE_DIR, '/testmap/static/')
# CKEDITOR_BASEPATH = "/static/ckeditor/ckeditor/"
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
CKEDITOR_UPLOAD_PATH = MEDIA_ROOT
SESSION_SAVE_EVERY_REQUEST=True
